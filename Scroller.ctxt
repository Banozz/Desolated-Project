#BlueJ class context
comment0.target=Scroller
comment0.text=\r\n\ CLASS\:\ Scroller\ (extends\ Object)<br>\r\n\ AUTHOR\:\ danpost\ (greenfoot.org\ username)<br>\r\n\ DATE\:\ November\ 11,\ 2016<br>\r\n\ MODIFIED\:\ December\ 22,\ 2016\ (fixed\ 'scroll'\ method\ for\ limited\ no-image\ scrolling)<br>\r\n\ \ \ \ \ \ \ \ \ \ \ February\ 15,\ 2023\ (added\ an\ offset\ at\ line\ 96\ to\ compensate\ for\ non-scrollable\ area)<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ NOTE\:\ when\ adding\ offsets\ at\ line\ 95\ and\ 96,\ the\ scrolling\ limits\ need\ to\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ increased\ by\ double\ the\ offsets;\ one\ for\ the\ added\ area\ and\ one\ for\ the\ scrolling\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ to\ traverse\ that\ added\ area.\ \ So\ far,\ this\ is\ the\ ONLY\ reason\ I\ have\ come\ across\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ that\ requires\ this\ class\ to\ be\ modified.\r\n\ <br>\ \ \ \ \ \ \ \ \ \ \r\n\ DESCRIPTION\:\ \ This\ is\ a\ support\ class\ for\ a\ scrolling\ world.\ \ It\ contains\ two\ constructors;\r\n\ one\ for\ unlimited\ scrolling\ and\ one\ for\ limited\ scrolling.\ \ Both\ constructors\ have\ an\ 'image'\r\n\ parameter.\ \ Because\ image\ manipulation\ can\ hog\ up\ CPU\ time,\ it\ is\ important\ to\ remember\ that\r\n\ it\ is\ better\ not\ to\ have\ a\ scrolling\ background\ image\ (having\ an\ Actor\ for\ the\ background\ is\r\n\ probably\ worse\ than\ having\ the\ background\ scroll).\ \ For\ unlimited\ scrolling\ using\ a\ background\r\n\ image,\ the\ smaller\ that\ background\ image\ to\ be\ tiled,\ the\ better.\ \ Making\ the\ viewport\ (the\r\n\ size\ of\ the\ world\ that\ is\ visible)\ smaller\ can\ help\ in\ CPU\ expense,\ also.\ \ Scrolling\ worlds\r\n\ should\ be\ unbounded,\ allowing\ actors\ to\ move\ beyond\ the\ visible\ area.\ \ Ensuring\ that\ actors\r\n\ are\ removed\ from\ the\ world\ if\ no\ longer\ needed\ when\ out\ of\ view\ will\ help\ to\ prevent\ lag,\r\n\ as\ well.<br>\r\n\ <br>\r\n\ It\ is\ the\ responsibility\ of\ the\ World\ object\ that\ creates\ a\ Scroller\ object\ to\ determine\ when\r\n\ to\ scroll\ and\ by\ how\ much.\r\n
comment1.params=viewWorld\ image
comment1.target=Scroller(greenfoot.World,\ greenfoot.GreenfootImage)
comment1.text=\r\n\ This\ constructor\ is\ for\ an\ unlimited\ scrolling\ world;\r\n\ If\ 'image'\ is\ null,\ the\ background\ will\ not\ change;\ else\ the\ given\ image\ is\ wrapped\r\n\ \r\n\ @param\ viewWorld\ the\ world\ that\ scrolling\ will\ be\ performed\ on\r\n\ @param\ image\ the\ background\ image\ that\ will\ be\ tiled,\ if\ needed,\ and\ wrap\ with\ scrolling\r\n
comment2.params=viewWorld\ image\ wide\ high
comment2.target=Scroller(greenfoot.World,\ greenfoot.GreenfootImage,\ int,\ int)
comment2.text=\r\n\ This\ constructor\ is\ for\ a\ limited\ scrolling\ world;\r\n\ If\ 'image'\ is\ smaller\ than\ the\ given\ total\ scrolling\ area,\ it\ will\ be\ tiled\r\n\ If\ 'image'\ is\ null,\ the\ background\ will\ not\ change\r\n\ \r\n\ @param\ viewWorld\ the\ world\ that\ scrolling\ will\ be\ performed\ on\r\n\ @param\ image\ the\ background\ image\ that\ will\ be\ tiled,\ if\ needed,\ to\ fill\ the\ scrolling\ area\r\n\ @param\ wide\ the\ width\ of\ the\ visible\ area\ encompassed\ through\ scrolling;\r\n\ the\ given\ value\ must\ be\ at\ least\ equal\ to\ the\ width\ of\ 'viewWorld'\ and\r\n\ is\ given\ in\ world\ cells\ (not\ in\ pixels)\r\n\ @param\ high\ the\ height\ of\ the\ visible\ area\ encompassed\ through\ scrolling;\r\n\ the\ given\ value\ must\ be\ at\ least\ equal\ to\ the\ height\ of\ 'viewWorld'\ and\r\n\ is\ given\ in\ world\ cells\ (not\ in\ pixels)\r\n
comment3.params=dsx\ dsy
comment3.target=void\ scroll(int,\ int)
comment3.text=\r\n\ performs\ scrolling\ on\ 'world'\ by\ the\ given\ distances\ along\ the\ horizontal\ and\ vertical;\r\n\ if\ 'limited'\ is\ false,\ requested\ distances\ are\ actual\ scrolling\ distances;\r\n\ if\ 'limited'\ is\ true,\ the\ distances\ may\ be\ adjusted\ due\ to\ the\ limits\ of\ scrolling\r\n\r\n\ @param\ dsx\ the\ requested\ distance\ to\ shift\ everything\ horizontally\r\n\ @param\ dsy\ the\ requested\ distance\ to\ shift\ everything\ vertically\r\n
comment4.params=right\ bottom
comment4.target=void\ crop(int,\ int)
comment4.text=\r\n\ setter\ method\ for\ reducing\ scrolling\ window\ from\ right\ and\ bottom\ edges\r\n\ \r\n\ @param\ right\ the\ width\ of\ right\ side\ not\ used\ by\ scrolling\ background\r\n\ @param\ bottom\ the\ height\ of\ bottom\ side\ not\ used\ by\ scrolling\ background\r\n
comment5.params=
comment5.target=int\ getScrolledX()
comment5.text=\r\n\ getter\ method\ for\ the\ current\ total\ scrolled\ distance\ horizontally\r\n\r\n\ @return\ the\ current\ total\ offset\ of\ horizontal\ scrolling\r\n
comment6.params=
comment6.target=int\ getScrolledY()
comment6.text=\r\n\ getter\ method\ for\ the\ current\ total\ scrolled\ distance\ vertically\r\n\r\n\ @return\ the\ current\ total\ offset\ of\ vertical\ scrolling\r\n
numComments=7
